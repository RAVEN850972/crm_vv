# CRM для кондиционеров - Docker Compose

version: '3.8'

services:
  # База данных PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django приложение
  web:
    build: .
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=your-very-secure-secret-key-change-in-production
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com
      - DJANGO_DB_ENGINE=django.db.backends.postgresql
      - DJANGO_DB_NAME=crm_db
      - DJANGO_DB_USER=crm_user
      - DJANGO_DB_PASSWORD=secure_password
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - YANDEX_MAPS_API_KEY=your-yandex-maps-api-key
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx веб-сервер
  nginx:
    image: nginx:alpine
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Для SSL сертификатов
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker для фоновых задач (опционально)
  celery:
    build: .
    command: celery -A crm_ac worker --loglevel=info
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=your-very-secure-secret-key-change-in-production
      - DJANGO_DB_ENGINE=django.db.backends.postgresql
      - DJANGO_DB_NAME=crm_db
      - DJANGO_DB_USER=crm_user
      - DJANGO_DB_PASSWORD=secure_password
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery beat для периодических задач (опционально)
  celery-beat:
    build: .
    command: celery -A crm_ac beat --loglevel=info
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=your-very-secure-secret-key-change-in-production
      - DJANGO_DB_ENGINE=django.db.backends.postgresql
      - DJANGO_DB_NAME=crm_db
      - DJANGO_DB_USER=crm_user
      - DJANGO_DB_PASSWORD=secure_password
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: